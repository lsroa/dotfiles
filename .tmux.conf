set -g mouse on
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l


bind-key -n F3 swap-window -t +1\; select-window -t +1
bind-key -n F2 swap-window -t -1\; select-window -t -1

bind-key -n M-j switch-client -n
bind-key -n M-k switch-client -p

bind -n M-h previous-window
bind -n M-l next-window
set-window-option -g mode-keys vi
set-option -sg escape-time 30
set -s set-clipboard off 
bind -Tcopy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel 'pbcopy'

set -g status-interval 1 
set -g automatic-rename on

bind-key c command-prompt -p "name:" "new-window; rename-window '%%'"

set-option -g default-terminal "screen-256color"

set-option -g history-limit 10000
set -g focus-events on

# colors
thm_bg="#1e1e2e"
thm_fg="#cdd6f4"
thm_cyan="#89dceb"
thm_black="#181825"
thm_gray="#313244"
thm_magenta="#cba6f7"
thm_pink="#f5c2e7"
thm_red="#f38ba8"
thm_green="#a6e3a1"
thm_yellow="#f9e2af"
thm_blue="#89b4fa"
thm_orange="#fab387"
thm_black4="#585b70"

thm_vscode_blue="#027BCC"
thm_vscode_green="#2C896C"
thm_vscode_white="#D3F8FF"
thm_vscode_white_alt="#47E0FF"
thm_vscode_orange="#FFB454"

set -g status-left-length 20
set-window-option -g status-left "#[fg=$thm_vscode_white,bg=$thm_vscode_green]  #S #[bg=$thm_vscode_blue] "
set-option -g status-style bg=$thm_vscode_blue,fg=$thm_vscode_white

# set window split
bind-key v split-window -h -c '#{pane_current_path}'
bind-key b split-window -c '#{pane_current_path}'

# active window title colors
set-window-option -g window-status-current-style bg=$thm_vscode_blue
set -g window-status-format "#[fg=$thm_vscode_white_alt]#{window_name}"
set -g window-status-current-format "#[fg=$thm_vscode_white,bright,bold]#{window_name}#[fg=$thm_vscode_orange]"

# pane border
set-option -g pane-border-style fg=colour235 #fg=base02
set-option -g pane-active-border-style fg=$thm_green  #fg=base01
set -g pane-border-status top
set -g pane-border-format "#[fg=$thm_red] #(git -C #{pane_current_path} rev-parse --abbrev-ref HEAD) "
set -g pane-border-lines heavy 

# message text
set-option -g message-style fg=$thm_vscode_white,bg=$thm_vscode_green

# pane number display
set-option -g display-panes-active-colour $thm_cyan #blue
set-option -g display-panes-colour $thm_red #pinkj

# resize bindings

bind -r h resize-pane -L 5
bind -r j resize-pane -D 5
bind -r k resize-pane -U 5
bind -r l resize-pane -R 5

# status right

set-option -g status-right "#[fg=$thm_vscode_white,bold] #(cat $HOME/.ssh/CURRENT_IDENTITY) #[fg=default]- %H:%M 󰥔 "
